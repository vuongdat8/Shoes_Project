package com.example.shoes_project.data;

import android.content.Context;
import androidx.room.Database;
import androidx.room.Room;
import androidx.room.RoomDatabase;

import com.example.shoes_project.model.Product;
import com.example.shoes_project.model.User;

@Database(
        entities = {Product.class,  User.class},
        version = 1,
        exportSchema = false
)
public abstract class AppDatabase extends RoomDatabase {

    // DAOs t·ª´ database ƒë·∫ßu ti√™n
    public abstract ProductDao productDao();

    // DAO t·ª´ database th·ª© hai
    public abstract UserDao userDao();
    private static volatile AppDatabase INSTANCE;
    public static AppDatabase getInstance(Context context) {
        if (INSTANCE == null) {
            synchronized (AppDatabase.class) {
                if (INSTANCE == null) {
                    INSTANCE = Room.databaseBuilder(
                                    context.getApplicationContext(),
                                    AppDatabase.class,
                                    "app_database"
                            )
                            .allowMainThreadQueries() // Ch·ªâ n√™n d√πng cho testing
                            .build();
                }
            }
        }
        return INSTANCE;
    }
}



//package com.example.shoes_project.data;
//
//import android.content.Context;
//
//import androidx.annotation.NonNull;
//import androidx.room.Database;
//import androidx.room.Room;
//import androidx.room.RoomDatabase;
//import androidx.sqlite.db.SupportSQLiteDatabase;
//
//import java.util.concurrent.Executors;
//
//@Database(entities = {User.class}, version = 1, exportSchema = false)
//public abstract class AppDatabase extends RoomDatabase {
//
//    public abstract UserDao userDao();
//
//    private static volatile AppDatabase INSTANCE;
//
//    /**  üëá Ch·ªânh ·ªü ƒë√¢y  */
//    public static AppDatabase getInstance(Context context) {
//        if (INSTANCE == null) {
//            synchronized (AppDatabase.class) {
//                if (INSTANCE == null) {
//
//                    /* 1) X√ìA TO√ÄN B·ªò FILE app_db M·ªñI KHI ·ª®NG D·ª§NG CH·∫†Y  */
//                    // N·∫øu mu·ªën GI·ªÆ schema v√† ch·ªâ xo√° d·ªØ li·ªáu, comment d√≤ng n√†y.
//                    context.deleteDatabase("app_db");
//
//                    /* 2) T·∫†O L·∫†I DATABASE  */
//                    INSTANCE = Room.databaseBuilder(
//                                    context.getApplicationContext(),
//                                    AppDatabase.class,
//                                    "app_db")
//                            /* N·∫øu ch·ªâ mu·ªën xo√° b·∫£n ghi ch·ª© kh√¥ng xo√° file, b·ªè ƒëo·∫°n deleteDatabase ·ªü tr√™n
//                               v√† d√πng callback d∆∞·ªõi ƒë√¢y  */
//                            .addCallback(new Callback() {
//                                @Override
//                                public void onOpen(@NonNull SupportSQLiteDatabase db) {
//                                    super.onOpen(db);
//                                    // Ch·∫°y n·ªÅn ƒë·ªÉ tr√°nh block UI
//                                    Executors.newSingleThreadExecutor().execute(() -> {
//                                        // Xo√° t·∫•t c·∫£ b·∫£ng, gi·ªØ schema
//                                        INSTANCE.clearAllTables();
//                                    });
//                                }
//                            })
//                            .build();
//                }
//            }
//        }
//        return INSTANCE;
//    }
//}
